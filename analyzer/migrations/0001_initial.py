# Generated by Django 5.2.4 on 2025-08-08 18:17

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_analyses', models.PositiveIntegerField(default=0)),
                ('successful_analyses', models.PositiveIntegerField(default=0)),
                ('failed_analyses', models.PositiveIntegerField(default=0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('premium_users', models.PositiveIntegerField(default=0)),
                ('platform_breakdown', models.JSONField(default=dict)),
                ('avg_processing_time', models.FloatField(default=0)),
                ('avg_quality_score', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_url', models.URLField(max_length=500)),
                ('product_title', models.CharField(max_length=300)),
                ('product_price', models.CharField(blank=True, max_length=100, null=True)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('product_category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_brand', models.CharField(blank=True, max_length=100, null=True)),
                ('product_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('platform', models.CharField(choices=[('tiktok', 'TikTok'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('facebook', 'Facebook'), ('twitter', 'Twitter'), ('linkedin', 'LinkedIn'), ('pinterest', 'Pinterest'), ('snapchat', 'Snapchat')], max_length=20)),
                ('target_audience', models.CharField(max_length=300)),
                ('additional_context', models.TextField(blank=True, null=True)),
                ('campaign_goal', models.CharField(choices=[('conversions', 'Conversiones'), ('awareness', 'Conocimiento de Marca'), ('engagement', 'Engagement'), ('traffic', 'Tráfico Web'), ('leads', 'Generación de Leads'), ('sales', 'Ventas Directas')], default='conversions', max_length=20)),
                ('budget', models.CharField(choices=[('low', 'Bajo (< $500)'), ('medium', 'Medio ($500-2000)'), ('high', 'Alto ($2000-5000)'), ('enterprise', 'Empresarial (> $5000)')], default='medium', max_length=20)),
                ('tone', models.CharField(choices=[('professional', 'Profesional'), ('casual', 'Casual'), ('funny', 'Divertido'), ('educational', 'Educativo'), ('inspirational', 'Inspiracional'), ('urgent', 'Urgente')], default='professional', max_length=20)),
                ('analysis_type', models.CharField(choices=[('basic', 'Básico'), ('competitive', 'Competitivo'), ('batch', 'En Lote'), ('advanced', 'Avanzado')], default='basic', max_length=20)),
                ('ai_response', models.TextField()),
                ('ai_model_used', models.CharField(default='gemini-pro', max_length=50)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('quality_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('user_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('share_token', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Análisis',
                'verbose_name_plural': 'Análisis',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('rating', 'Calificación'), ('improvement', 'Sugerencia de Mejora'), ('bug', 'Reporte de Bug'), ('feature', 'Solicitud de Función')], max_length=20)),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('helpful', models.BooleanField(blank=True, null=True)),
                ('accuracy', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('completeness', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='analyzer.analysishistory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analyzer.analysishistory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketingTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('platform', models.CharField(choices=[('tiktok', 'TikTok'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('facebook', 'Facebook'), ('twitter', 'Twitter'), ('linkedin', 'LinkedIn'), ('pinterest', 'Pinterest'), ('snapchat', 'Snapchat')], max_length=20)),
                ('category', models.CharField(choices=[('technology', 'Tecnología'), ('lifestyle', 'Estilo de Vida'), ('fitness', 'Fitness'), ('fashion', 'Moda'), ('food', 'Comida'), ('travel', 'Viajes'), ('education', 'Educación'), ('business', 'Negocios'), ('health', 'Salud'), ('beauty', 'Belleza'), ('gaming', 'Gaming'), ('general', 'General')], max_length=20)),
                ('template', models.TextField(help_text='Usa [PRODUCTO], [PRECIO], [BENEFICIO] como placeholders')),
                ('description', models.TextField(blank=True, null=True)),
                ('hashtags', models.CharField(blank=True, max_length=500, null=True)),
                ('success_rate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('times_used', models.PositiveIntegerField(default=0)),
                ('avg_engagement', models.FloatField(default=0)),
                ('avg_conversion_rate', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-success_rate', '-times_used'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('analysis_complete', 'Análisis Completado'), ('plan_upgrade', 'Actualización de Plan'), ('achievement', 'Logro Desbloqueado'), ('system', 'Notificación del Sistema'), ('feedback', 'Solicitud de Feedback')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('action_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('related_analysis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='analyzer.analysishistory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('plan', models.CharField(choices=[('free', 'Gratuito'), ('pro', 'Profesional'), ('premium', 'Premium'), ('enterprise', 'Empresarial')], default='free', max_length=20)),
                ('plan_expires', models.DateTimeField(blank=True, null=True)),
                ('analyses_limit_monthly', models.PositiveIntegerField(default=5)),
                ('analyses_this_month', models.PositiveIntegerField(default=0)),
                ('preferred_platforms', models.JSONField(blank=True, default=list)),
                ('default_tone', models.CharField(choices=[('professional', 'Profesional'), ('casual', 'Casual'), ('funny', 'Divertido'), ('educational', 'Educativo'), ('inspirational', 'Inspiracional'), ('urgent', 'Urgente')], default='professional', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('total_analyses', models.PositiveIntegerField(default=0)),
                ('successful_analyses', models.PositiveIntegerField(default=0)),
                ('avg_quality_score', models.FloatField(default=0)),
                ('points', models.PositiveIntegerField(default=0)),
                ('level', models.PositiveIntegerField(default=1)),
                ('achievements', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='analysishistory',
            index=models.Index(fields=['user', '-created_at'], name='analyzer_an_user_id_639ec8_idx'),
        ),
        migrations.AddIndex(
            model_name='analysishistory',
            index=models.Index(fields=['platform', 'success'], name='analyzer_an_platfor_e1afaf_idx'),
        ),
        migrations.AddIndex(
            model_name='analysishistory',
            index=models.Index(fields=['analysis_type', '-created_at'], name='analyzer_an_analysi_f589bf_idx'),
        ),
        migrations.AddIndex(
            model_name='analysishistory',
            index=models.Index(fields=['is_public', 'success'], name='analyzer_an_is_publ_4bb108_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='analysisfeedback',
            unique_together={('analysis', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='favoriteanalysis',
            unique_together={('user', 'analysis')},
        ),
        migrations.AddIndex(
            model_name='marketingtemplate',
            index=models.Index(fields=['platform', 'category', 'is_active'], name='analyzer_ma_platfor_944a44_idx'),
        ),
        migrations.AddIndex(
            model_name='marketingtemplate',
            index=models.Index(fields=['success_rate', '-times_used'], name='analyzer_ma_success_4a08de_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='analyzer_no_user_id_db698d_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', '-created_at'], name='analyzer_no_notific_7ee23f_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['plan', 'plan_expires'], name='analyzer_us_plan_0da4ae_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['points', 'level'], name='analyzer_us_points_efb03e_idx'),
        ),
    ]
